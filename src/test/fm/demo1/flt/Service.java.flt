package com.huayun.ssh.${pkage}.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.huayun.ssh.common.util.AppExceptionUtil;
import com.huayun.ssh.common.util.Assert;
import com.huayun.ssh.common.util.JavaBeanUtils;
import com.huayun.ssh.common.util.LogUtil;
import com.huayun.ssh.${pkage}.dao.I${model}Dao;
import com.huayun.ssh.${pkage}.model.${model};
import com.huayun.ssh.${pkage}.service.I${model}Service;

@Component("${modelLowerCase}Service")
@SuppressWarnings("all")
public class ${model}Service implements I${model}Service{
	private static final LogUtil LOGGER = LogUtil.getInstances(${model}Service.class);
	@Autowired
	private I${model}Dao ${modelLowerCase}Dao;

	@Override
	public ${model} getBy${model}(String ${modelLowerCase}) {
		${model} value = null;
		try {
			String hql = "FROM ${model} WHERE ${modelLowerCase} = '" + ${modelLowerCase} +"' AND status=1";
			List<${model}> list = (List<${model}>) ${modelLowerCase}Dao.queryHQL(hql);
			if(list != null && 0 < list.size()){
				value = list.get(0);
			}
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return value;
	}

	@Override
	public int getTableDataCount(String nickName, String ${modelLowerCase}) {
		int value = 0;
		try {
			String hql = "SELECT COUNT(*) FROM ${model} WHERE nickName LIKE '%" + nickName +"%' AND ${modelLowerCase} LIKE '%" + ${modelLowerCase} +"%' AND status=1 ORDER BY createTime DESC"	;
			value = ${modelLowerCase}Dao.getTotalCount(hql);
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return value;
	}

	@Override
	public List<${model}> getTableData(String nickName, String ${modelLowerCase}, int start, int limit) {
		List<${model}> valueList = null;
		try {
			String hql = "FROM ${model} WHERE nickName LIKE '%" + nickName +"%' AND ${modelLowerCase} LIKE '%" + ${modelLowerCase} +"%'  AND status=1  ORDER BY createTime DESC"	;
			valueList = (List<${model}>) ${modelLowerCase}Dao.getByPage(hql, start, limit);
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return valueList == null ? new ArrayList<${model}>() : valueList;
	}

	@Override
	public ${model} save(${model} ${modelLowerCase}) {
		try {
			${modelLowerCase} = ${modelLowerCase}Dao.save(${modelLowerCase});
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return ${modelLowerCase};
	}

	@Override
	public ${model} getById(String id) {
		${model} value = null;
		try {
			value = ${modelLowerCase}Dao.getById(${model}.class, id);
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return value == null ? new ${model}() : value;
	}

	@Override
	public ${model} edit(${model} ${modelLowerCase}) {
		${model} value = null;
		try {
			String id = ${modelLowerCase}.getId();
			${model} old${model} = getById(id);
			Assert.isNotNull(old${model}, "没有找到需要更新的记录，该记录或许已经被删除");
			JavaBeanUtils.copyProperties(${modelLowerCase}, old${model}, new String[]{"${modelLowerCase}RoleList","${modelLowerCase}RightList"});
			value = ${modelLowerCase}Dao.update(old${model});
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return value;
	}

	@Override
	public ${model} logicDelete(String id) {
		${model} value = null ;
		try {
			value = getById(id);
			Assert.isNotNull(value, "没有找到该记录，该记录或许已经被删除");
			value.setStatus(-1);
			${modelLowerCase}Dao.update(value);
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return value;
	}

	@Override
	public List<${model}> getTableData() {
		List<${model}> valueList = null;
		try {
			String hql = "FROM com.huayun.ssh.${pkage}.model.${model} A WHERE A.status = 1";
			valueList = (List<${model}>) ${modelLowerCase}Dao.queryHQL(hql);
		} catch (Exception e) {
			e.printStackTrace();
			AppExceptionUtil.throwException(LOGGER, e);
		}
		return valueList == null ? new ArrayList<${model}>() : valueList;
	}

}
